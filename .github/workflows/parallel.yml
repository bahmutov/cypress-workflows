# reusable workflow to install NPM dependencies
# and run Cypress tests across N machines in parallel
# https://docs.github.com/en/actions/learn-github-actions/reusing-workflows
name: parallel
on:
  workflow_call:
    inputs:
      n:
        description: 'Number of parallel containers'
        type: number
        required: true
        default: 1
      # standard parameters
      config:
        description: 'Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file.'
        type: string
        required: false
      config-file:
        description: 'Path to a JSON file where configuration values are set.'
        type: string
        required: false
      env:
        description: 'Sets Cypress environment variables'
        type: string
        required: false
      browser:
        description: 'Name of the browser to use'
        type: string
        required: false
      command:
        description: 'Command that overrides cypress run'
        type: string
        required: false
      start:
        description: 'Command for starting local server in the background'
        type: string
        required: false
      start-windows:
        description: 'A different start command on Windows'
        type: string
        required: false
      build:
        description: 'Command to run in build step before starting tests'
        type: string
        required: false
      install:
        description: 'Whether or not to run install'
        type: boolean
        required: false
        default: true
      install-command:
        description: 'Custom install command to use'
        type: string
        required: false
      runTests:
        description: 'Whether or not to run tests'
        type: boolean
        required: false
        default: true
      wait-on:
        description: 'Local server URL to wait for'
        type: string
        required: false
      wait-on-timeout:
        description: 'Amount of time to wait for wait-on url to be available'
        type: number
        required: false
        # default is 60 seconds
        default: 60
      parallel:
        description: 'Whether or not to load balance tests using multiple containers'
        type: boolean
        required: false
      group:
        description: 'Group setting for tests'
        type: string
        required: false
      tag:
        description: 'Tag setting for tests'
        type: string
        required: false
      working-directory:
        description: 'Working directory containing Cypress folder'
        type: string
        required: false
      headed:
        description: 'Whether or not to use headed mode'
        type: boolean
        required: false
      spec:
        description: 'Provide a specific specs to run'
        type: string
        required: false
      project:
        description: 'Path of project to run'
        type: string
        required: false
      command-prefix:
        description: 'You can prefix the default test command using the command-prefix option.'
        type: string
        required: false
      ci-build-id:
        description: 'ID associates multiple CI machines to one test run'
        type: string
        required: false
      cache-key:
        description: 'Custom cache key'
        type: string
        required: false
      quiet:
        description: 'Whether or not to silence any Cypress specific output from stdout'
        type: boolean
        required: false
        default: false
      debug-inputs:
        description: 'Print the workflow inputs'
        type: boolean
        required: false
        default: false
      debug:
        description: 'Set the environment variable DEBUG'
        type: string
        required: false
        default: ''
      component:
        description: 'Run the component tests, skipping end-to-end tests'
        type: boolean
        required: false
        default: false
      publish-summary:
        description: 'Whether or not to publish job summary'
        type: boolean
        required: false
        default: true

    # to tie all tests into a single recorded run, need the Dashboard key
    secrets:
      recordKey:
        description: 'Cypress Dashboard Record Key'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-20.04
    # explicitly set the output of this job
    # so that other jobs can use it
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      # generate the list using a bash script
      - name: Create matrix ‚äπ
        id: prepare
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          n: ${{ inputs.n }} # number of containers to output

      - name: Print result üñ®
        run: echo '${{ steps.prepare.outputs.matrix }}'

  # the N parallel testing jobs we create
  # https://github.com/cypress-io/github-action#parallel
  test:
    needs: prepare
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare.outputs.matrix)}}
    steps:
      - name: Debug inputs üêû
        if: ${{ inputs.debug-inputs }}
        env:
          WORKFLOW_INPUTS: ${{ toJson(inputs) }}
        run: echo "$WORKFLOW_INPUTS"

      - name: Checkout üõé
        uses: actions/checkout@v3

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: Cypress tests üß™
        uses: cypress-io/github-action@v5
        with:
          record: true
          parallel: true
          # pass the rest of workflow parameters
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          env: '${{ inputs.env }}'
          browser: ${{ inputs.browser }}
          command: ${{ inputs.command }}
          start: ${{ inputs.start }}
          start-windows: ${{ inputs.start-windows }}
          build: ${{ inputs.build }}
          install: ${{ inputs.install }}
          install-command: ${{ inputs.install-command }}
          runTests: ${{ inputs.runTests }}
          wait-on: ${{ inputs.wait-on }}
          wait-on-timeout: ${{ inputs.wait-on-timeout }}
          group: ${{ inputs.group }}
          tag: ${{ inputs.tag }}
          working-directory: ${{ inputs.working-directory }}
          headed: ${{ inputs.headed }}
          spec: ${{ inputs.spec }}
          project: ${{ inputs.project }}
          command-prefix: ${{ inputs.command-prefix }}
          ci-build-id: ${{ inputs.ci-build-id }}
          cache-key: ${{ inputs.cache-key }}
          quiet: ${{ inputs.quiet }}
          component: ${{ inputs.component }}
          publish-summary: ${{ inputs.publish-summary }}
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.recordKey }}
          # pass the DEBUG environment variable
          DEBUG: ${{ inputs.debug }}
